[{"C:\\Users\\Media House\\OneDrive\\Bureau\\upload\\front\\src\\index.js":"1","C:\\Users\\Media House\\OneDrive\\Bureau\\upload\\front\\src\\App.js":"2","C:\\Users\\Media House\\OneDrive\\Bureau\\upload\\front\\src\\screens\\FileUploadScreen.js":"3","C:\\Users\\Media House\\OneDrive\\Bureau\\upload\\front\\src\\data\\api.js":"4"},{"size":410,"mtime":1633169668391,"results":"5","hashOfConfig":"6"},{"size":1441,"mtime":1633540969267,"results":"7","hashOfConfig":"6"},{"size":2982,"mtime":1633172046947,"results":"8","hashOfConfig":"6"},{"size":457,"mtime":1633030533901,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1g3zunt",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"C:\\Users\\Media House\\OneDrive\\Bureau\\upload\\front\\src\\index.js",[],["20","21"],"C:\\Users\\Media House\\OneDrive\\Bureau\\upload\\front\\src\\App.js",["22","23"],"C:\\Users\\Media House\\OneDrive\\Bureau\\upload\\front\\src\\screens\\FileUploadScreen.js",["24"],"import React, {useState, useEffect} from 'react';\nimport {multipleFilesUpload} from '../data/api';\nimport {CircularProgressbar, buildStyles} from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\n\nconst FileUploadScreen = (props) => {\n    const [multipleFiles, setMultipleFiles] = useState('');\n    const [multipleProgress, setMultipleProgress] = useState(0);\n    const MultipleFileChange = (e) => {\n        setMultipleFiles(e.target.files);\n        setMultipleProgress(0);\n    }\n    const mulitpleFileOptions = {\n        onUploadProgress: (progressEvent) => {\n            const {loaded, total} = progressEvent;\n            const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\n            setMultipleProgress(percentage);\n        }\n    }\n    const UploadMultipleFiles = async () => {\n        const formData = new FormData();\n        for (let i = 0; i < multipleFiles.length; i++) {\n            formData.append('files', multipleFiles[i]);                      \n        }\n        await multipleFilesUpload(formData, mulitpleFileOptions);\n        props.getMultiple();\n        setMultipleFiles('');\n        document.querySelectorAll(\"input\").forEach(input => (input.value=\"\"));\n    }\n    return (\n        <div className=\"row mt-3\">\n            <div className=\"col-6\">\n                <div className=\"row\">\n                    <div className=\"col-10\">\n                    <div className=\"form-group files\">\n                        <label>Select single or Multiple File(s)</label>\n                        <input  type=\"file\"  name='file' onChange={(e) => MultipleFileChange(e)} className=\"form-control\" multiple />\n                    </div>\n                    </div>\n                </div>                   \n                <div className=\"row\">\n                        <div className=\"col-10\">\n                            <button type=\"button\" onClick={() => UploadMultipleFiles()}  className=\"btn btn-primary\">Upload</button>\n                        </div>\n                        <div className=\"col-2\">\n                            <CircularProgressbar\n                                value={multipleProgress}\n                                text={`${multipleProgress}%`}\n                                styles={buildStyles({\n                                    rotation: 0.25,\n                                    strokeLinecap: 'butt',\n                                    textSize: '16px',\n                                    pathTransitionDuration: 0.5,\n                                    pathColor: `rgba(255, 136, 136, ${multipleProgress / 100})`,\n                                    textColor: '#f88',\n                                    trailColor: '#d6d6d6',\n                                    backgroundColor: '#3e98c7',\n                                })}\n                            />\n                        </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default FileUploadScreen;","C:\\Users\\Media House\\OneDrive\\Bureau\\upload\\front\\src\\data\\api.js",[],{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":4,"column":9,"nodeType":"31","messageId":"32","endLine":4,"endColumn":23},{"ruleId":"33","severity":1,"message":"34","line":19,"column":6,"nodeType":"35","endLine":19,"endColumn":8,"suggestions":"36"},{"ruleId":"29","severity":1,"message":"37","line":1,"column":26,"nodeType":"31","messageId":"32","endLine":1,"endColumn":35},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'getSingleFiles' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMultipleFilesList'. Either include it or remove the dependency array.","ArrayExpression",["40"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"41","fix":"42"},"Update the dependencies array to be: [getMultipleFilesList]",{"range":"43","text":"44"},[557,559],"[getMultipleFilesList]"]